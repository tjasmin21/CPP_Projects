/*/////////////////////////////////////////////////////////////////////////////
module:  implementation of geom classes (CPP-A.01S_GLDraw2D)
purpose: implements all geometrical classes used in the draw application

written: U.Kuenzler
version: 1.01
history: 1.00 - initial version of OpenGL drawing application
/////////////////////////////////////////////////////////////////////////////*/



// system includes ////////////////////////////////////////////////////////////
#include <iostream>
using namespace std;


// application includes ///////////////////////////////////////////////////////
#include "../inc/Geom.h"


///////////////////////////////////////////////////////////////////////////////
// class:    CPoint
// function: set()
// purpose:  sets coordinates of point
///////////////////////////////////////////////////////////////////////////////
void CPoint::set( float x1, float y1 )
///////////////////////////////////////////////////////////////////////////////
{
	x = x1;
	y = y1;
}


///////////////////////////////////////////////////////////////////////////////
// class:    CPoint
// function: list()
// purpose:  list coordinates on standard console
///////////////////////////////////////////////////////////////////////////////
void CPoint::list( void )
///////////////////////////////////////////////////////////////////////////////
{
	cout << "CPoint : " << "Px=" << x << " Py=" << y << endl;
}


///////////////////////////////////////////////////////////////////////////////
// class:    CLine
// function: set()
// purpose:  sets coordinates of line
///////////////////////////////////////////////////////////////////////////////
void CLine::set( float x1, float y1, float x2, float y2 )
///////////////////////////////////////////////////////////////////////////////
{
	_P1.set(x1, y1);
	_P2.set(x2, y2);
}


///////////////////////////////////////////////////////////////////////////////
// class:    CLine
// function: list()
// purpose:  list coordinates on standard console
///////////////////////////////////////////////////////////////////////////////
void CLine::list( void )
///////////////////////////////////////////////////////////////////////////////
{
	cout << "CLine  :" << endl; _P1.list(); _P2.list(); cout << endl;
}


///////////////////////////////////////////////////////////////////////////////
// class:    CRect
// function: set()
// purpose:  sets the coordinates of the line
///////////////////////////////////////////////////////////////////////////////
void CRect::set( float x1, float y1, float x2, float y2 )
///////////////////////////////////////////////////////////////////////////////
{
	_P1.set(x1, y1);
	_P2.set(x2, y2);
}


///////////////////////////////////////////////////////////////////////////////
// class:    CRect
// function: list()
// purpose:  list coordinates on standard console
///////////////////////////////////////////////////////////////////////////////
void CRect::list( void )
///////////////////////////////////////////////////////////////////////////////
{
	cout << "CRect  :" << endl; _P1.list(); _P2.list(); cout << endl;
}


///////////////////////////////////////////////////////////////////////////////
// class:    CCircle
// function: set()
// purpose:  sets the coordinates of the line
///////////////////////////////////////////////////////////////////////////////
void CCircle::set( float x1, float y1, float radius )
///////////////////////////////////////////////////////////////////////////////
{
	_P1.set(x1, y1);
	_Radius = radius;
}


///////////////////////////////////////////////////////////////////////////////
// class:    CCircle
// function: list()
// purpose:  list coordinates on standard console
///////////////////////////////////////////////////////////////////////////////
void CCircle::list( void )
///////////////////////////////////////////////////////////////////////////////
{
	cout << "CCircle: " << endl; _P1.list();
	cout << "Radius : " << _Radius << endl << endl;
}
